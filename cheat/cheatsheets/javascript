# The map() method creates a new array populated with the results of calling a provided
# function on every element in the calling array.
[1, 2, 3].map(x => x * 2);

# add item to array
a.push('foo')

# array foreach
a.forEach((item) => { console.log(item); })
a.forEach((item, ind) => { console.log(item); })

# "continue" in foreach loop
a.forEach((item) => {
    if (...) {
        // continue
        return
    }
}

# create a sequence of numbers (~range())
[...Array(5).keys()]

# create an array of a specified size
Array(5).fill(0);

# iterate over key, value pairs for object (~object "foreach")
for (const [key, value] of Object.entries(obj)) {
  console.log(`${key}: ${value}`);
}

# get values for object
Object.values(obj)

# check "length" of object
Object.keys(obj).length

# check if item is in array
arr.includes('foo')

# array intersection
a.filter(val => b.includes(val));

# items in one array and not another (~set difference)
a.filter(item => !b.includes(item)));

# filter *object* by key
Object.fromEntries(
  Object.entries(obj).filter(([key, value]) => allowed.includes(key))
);

# extract a single field from each object in an array
let arr = [{'title': 'hi'}, {'title': 'bye'}]
arr.map(x => x.title)

# find index of item in array
arr.indexOf('foo')

# map from array of objects to an array of objects
arr.map(x => ({ foo: x.bar }));

# subset array
arr.slice(0,3);

# check if item in array
arr.includes(x)

# concatenate arrays
const b = a.concat(b);

# check if key in obj
"key" in obj

# check array equality (ordered)
JSON.stringify(a) == JSON.stringify(b);

# check array equality (any order)
JSON.stringify(a.sort()) == JSON.stringify(b.sort());

# find minimum value of an array of numbers
Math.min(...arr)

# equality
a === b  # strict equality (type + value)
a == b   # loose equality (performs type coercion)

# trim whitespace
str.trim()

# sum array of numbers
[1, 2, 3, 4].reduce((a, b) => a + b, 0)

# sort an array of objects by object value (in-place)
entries.sort((a, b) => (a.similarity > b.similarity) ? 1 : -1);

# convert array of numbers to a ranking
# https://stackoverflow.com/a/65681883/554531
const sorted = [...arr].sort((a, b) => b - a);
return arr.map((x) => sorted.indexOf(x) + 1);

# print current date
console.log(Date())
