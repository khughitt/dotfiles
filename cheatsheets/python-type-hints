# indicate variable type has changed
# note: "type(xx) == .." and "type(xx) in [...]" will not work
if type(xx) is <type>:
  ...

# show type in mypy debugger
reveal_type(x)

# indiciating to type checker that a variable is a particular type.
# the function does not actually change the type of the variable; it just tells mypy what to expect
from typing import cast
cast(str, x)

# indicate known type (e.g. type of return value in function with multiple possible return types)
assert isinstance(x, str) 

# pydantic: support dict["key"] style access
# https://stackoverflow.com/a/62561069/554531
class Foo(BaseModel):
    some_list: Optional[list[str]] = []

    def __getitem__(self, item):
        return getattr(self, item)

# vi:syntax=python
