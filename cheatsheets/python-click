#
# concepts:
#
# 1. "command" - wraps func -> cli command
# 2. "group" - wraps commands -> application
# 3. "context" - how groups and command communicate
#
# see: https://click.palletsprojects.com/en/stable/complex/#contexts

# entrypoint
@click.group()
@click.option("--verbose", is_flag=True, help="If enabled, prints verbose output")
def cli(verbose:bool):
  pass

# command
@cli.command()
@click.argument('input_file', type=click.File('rb'))
@click.argument('output_file', type=str)
@click.option("--foo", "-f", default="bar", type=str, help="...")

# passing context from group -> commands
@click.group()
@click.option("--foo")
@click.pass_context
def cli(ctx):
  ctx.obj = Foo(..)

  # or..
  ctx.obj = {
    "foo": foo
  }

# pass entire context
@cli.command()
@click.pass_context
def child(ctx):
  ...

# pass a single object
@cli.command()
@click.pass_obj
def child(foo):
  ...

# be permissive about order of params in command invocation
@click.group(context_settings={"allow_interspersed_args": True})

# getting path for click.File object
input_file.name

# vi:syntax=python
