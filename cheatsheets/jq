# lookup by property
jq ".parent.child" foo.json

# no color
jq --monochrome-output

# pretty print
jq . x.json

# print top-levels keys in a dict
jq 'keys[]' dict.json

# read from gzip
gunzip -c dict.json.gz | jq 'keys[]' | wcl

# convert list of records to csv
# https://stackoverflow.com/a/32965227/554531
jq -r '(map(keys) | add | unique) as $cols | map(. as $row | $cols | map($row[.])) as $rows | $cols, $rows[] | @csv'

# colored pagination
jq -C "." x.json | moar
jq -C "." x.json | less -R

# get first element in array
jq '.[0]' x.json

# get first key in dict
jq 'keys_unsorted[0]' x.json

# get first value in dict
jq '.[keys_unsorted[0]]' x.json

# given a dict of arrays, return dict with same structure, but only the first element from each
# top-level array
jq 'map_values(.[0])' x.json
