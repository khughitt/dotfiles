# p-value fdr adjustment
from scipy import stats
stats.false_discovery_control(pvals, method="bh")

# adjust each column independently, ignoring missing values
for i, cname in enumerate(df.columns):
    pvals = df.iloc[:, i].dropna().values
    padj = stats.false_discovery_control(pvals, method="bh")
    mask = np.isnan(df.iloc[:, i])
    df.loc[~mask, cname] = padj

#
# sparse matrices
#

# create empty Compressed Sparse Row matrix (CSR) matrix
mat = csr_matrix((m, n), dtype=..)

# load sparse matrix
scipy.sparse.load_npz()

# sum along specified axis
mat.sum(axis=0)

# get number of nonzero values in each col
mat.astype(bool).sum(axis=0).A1

# get indices of non-zero columns for each row in a csr matrix
# https://stackoverflow.com/a/24792612/554531
np.split(mat.indices, mat.indptr[1:-1])

# helper func to compute correlation matrix for a sparse csr matrix
# https://stackoverflow.com/a/38727681/554531
def sparse_corr(A):
    N = A.shape[0]
    C=((A.T*A -(sum(A).T*sum(A)/N))/(N-1)).todense()
    V=np.sqrt(np.mat(np.diag(C)).T*np.mat(np.diag(C)))
    COR = np.divide(C,V+1e-119)
    return COR

# vi:syntax=python
