# tensor creation examples
tensor([[1, 2], [3, 4]])
torch.from_numpy(arr)

torch.ones(shape)
torch.rand(shape)
torch.zeros(shape)

torch.ones_like(t)
torch.rand_like(t)

# info
tensor.shape
tensor.dtype
tensor.device

# join
torch.cat([t1, ..., tn], dim=1)

# matrix multiplication
x @ y
x.matmul(y)

# element-wise product
x * y
x.mul(y)

# export
tensor.numpy()
tensor.tolist()

# transfer tensor gpu
tensor.cuda()

# transfer tensor to specific gpu
cuda = torch.device('cuda') 

torch.tensor(..., device=cuda)
torch.tensor(...).to(device=cuda)

# clip values
torch.clamp(x, min=-1.0, max=1.0)

# expand singleton dimensions to a larger size
x.expand([..])

# squeeze (n dim -> n-1 dim)
x.squeeze(dim)

# unsqueeze (n dim -> n+1 dim)
x.unsqueeze(dim)

# vi:syntax=python
