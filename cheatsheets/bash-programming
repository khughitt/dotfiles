# bash/zsh 

# ~strict mode
set -euo pipefail 

# file/dir exists/not
[ -e "$path" ]
[ ! -e "$path" ]

# file exists + is file
[ -f "$path" ]

# string equality
[ "$a" = "$b" ]

# numeric equality
[ "$a" -eq "$b" ]
[ "$a" -ne "$b" ]

# numeric inequalities
[ "$a" -gt "$b" ]
[ "$a" -ge "$b" ]
[ "$a" -lt "$b" ]
[ "$a" -le "$b" ]

# string not null
[ -z "$a" ]

# check if string matches regex (ex. starts with)
[[ "$a" =~ ^foo.* ]]

# get filename portion of path
echo "${file##*/}"

# or..
basename $x

# replace file extension in a string
echo "${file%.old}.new"
echo "${file%.*}.new"

# remove file extension
echo "${file%.*}"

# remove last n characters from a string
echo "${x%???}"

# redirect stderr to stdout
cmd 2>&1

# if statement conditional on grep 
if ! echo $foo | grep -q "not running"; then echo 'yes'; fi

# if statement with multiple conditions
if ([ ] && [ ] && ...)

# if-else
if []; then
 ..
elif []; then
 ..
else
 ..
fi

# iterate over a list of strings (newline after list is important..)
for x in a b c
do
  echo $x;
done

# print a sequence of numbers with leading zeros
for i in $(seq -w 01 09); do
  echo $i
done

# split by " " and get the nth element (ex. 2nd)
echo "one two three" | cut -d ' ' -f2

# split by " " and get last element
# https://stackoverflow.com/questions/3162385/how-to-split-a-string-in-shell-and-get-the-last-field
foo="one two three"

echo ${foo##* }

${foo  <-- from variable foo
  ##   <-- greedy front trim
  *    <-- matches anything
       <-- until the last ' '
}

# date formatting
now=`date +%Y-%m-%d`

# convert lowercase to uppercase
echo $x | tr '[:lower:]' '[:upper:]'

# array length (zsh)
x=(a b c)
$#x

# string length
${#x}

# generate a random integer
$RANDOM

# choose a random item from an array
x=(a b c)
echo $x[$RANDOM % $#x + 1]

# check if function args provided
if [ "$#" -eq 0 ]; then
  echo "no args"
fi

# vi:syntax=bash
